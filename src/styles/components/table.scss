// Table grid
@mixin tableColumn($suffix) {
	@for $i from 1 through 24 {
		.c-table__cell--#{$i}#{$suffix} {
			width: calc(100% / 24 * (#{$i}));
		}
    }
}

@include tableColumn('');

@media (min-width: $breakpoint-main) {
	@include tableColumn(\@main);
}

// Table
.c-table {

    /* Local variables */
    --table-font-size: var(--font-size-base);
    --table-font-size-ecran4k: var(--font-size-base-ecran4k);
    --table-border-width: 2px;
    --table-separator-width: 1px;
    --table-active-color: var( --ion-color-primary);
    --table-inactive-color: var(--grey60);

    // Default light theme
    --table-color: var(--text-color);
    --table-border-color: var(--grey80);
    --table-separator-color: var(--table-border-color);

    --table-head-color-hover: var(--white);
    --table-head-color: var(--grey20);
    --table-head-background-color: var(--white);
    --table-odd-background-color: var(--grey90);

    /* ------------- */

    position: relative;
    display: block;
    width: 100%;
    color: var(--table-color);
    
    
    font-size: var(--table-font-size);
    @media (min-width: $breakpoint-ecran4k) {
        font-size: var(--table-font-size-ecran4k);
    }


    table {
        display: block;
    }

    // @media (max-width: 1170px) {
    //      // Manage responsive to 1024
    //     .ui-table {
    //         overflow-x: scroll;
    //     }
    //     .ui-table-wrapper {
    //         min-width: 750px;
    //     }
    // }
   
    // Elements
    
    &__row {

        position: relative;
        display: flex;
        align-items: center;
	}

	&__cell {
		position: relative;
		font-size: 1em;
        display: block;
    }

    // Existing table components
    
    thead {
        display: block;
        width: 100%;
        background-color: var(--table-head-background-color);
        color: var(--table-head-color);
        border-bottom: var(--table-separator-width) solid var(--table-separator-color);

        transition: background-color var(--transition-confort),
                    color var(--transition-confort),
                    border-color var(--transition-confort);

        a:hover,
        a:focus {
            color: var(--table-head-color-hover);
        }

        tr {
            background-color: transparent !important;
        }
    }

    tbody {
        display: block;
        width: 100%;
    }

    th {
        display: flex;
        align-items: center;
        text-transform: lowercase;
        font-variant: small-caps;
        font-size: 1rem;
        font-weight: bold;
        line-height: 1;
        outline: 0;
    }


    // Sortable table
    // (classes are generated by primeng)

    .ui-sortable-column-icon {
        // Applying Icomoon properties to a .pi class
        &.pi {
            @include icomoon();
            color: currentColor;
            transition: color var(--transition-confort);
            &:hover,
            &:focus {
                cursor: pointer;
                color: var(--table-active-color);
            }
        }
        &.pi:not(.pi-sort) { color: var(--table-active-color); }
        &.pi-sort { @extend .icon-import_export; }
        &.pi-sort-down { @extend .icon-arrow_downward; }
        &.pi-sort-up { @extend .icon-arrow_upward; }
        // Alignment to the largest icon
        width: 20px;
        display: inline-block;
        text-align: center;
        // Adjust visual vertical alignment
        transform: translateY(3px);
    }

    // Expandable table
    // (classes are generated by primeng)

    &__row {

        // States from primeng
        // &.ui-state-highlight  {
        //     border-color: $secondary-color;
        //     background: $secondary-color;
        //     color: $grey20;
        // }

        &.u-clickable {
            color: currentColor;
            transition: color var(--transition-confort);
            &:hover,
            &:focus {
                color: var(--table-active-color);
            }
        }

        &:nth-child(odd) {
            background-color: var(--table-odd-background-color);
            transition: background-color var(--transition-confort);
        }

        &.is-inactive {
            background-color: var(--table-inactive-color);
            opacity: 0.5;
        }

    }


    &__row + &__row  {
        border-top: var(--table-separator-width) solid var(--table-separator-color);
        transition: border-color var(--transition-confort);
    }

    // p-tableheadercheckbox .ui-chkbox-box {
    //     border-color:var(--ion-color-primary) !important;
    // }

    // Modifiers
    &--transparent {
        --table-cell-padding: 0;
        --table-border-color: transparent;
    }

}


.c-table--responsive {
    
    .c-table {

        &__row {
            @media (max-width: #{ $breakpoint-main - 1 }) {
                display: block;
            }
        }

        &__cell {
            @media (max-width: #{ $breakpoint-main - 1 }) {
                // display: flex;
                // justify-content: space-between;
                width: 100%;
            }
        }

        &__duplicated-title {
            display: none;
            @media (max-width: #{ $breakpoint-main - 1 }) {
                display: block;
                font-weight: bold;
            }
        }
    }

    thead {
        @media (max-width: #{ $breakpoint-main - 1 }) {
            display: none;
        }
    }
}

.display-table {
    display: table;
}
.home-table-cell {
    vertical-align:middle;
    height:100%;
    display:table-cell;
}

// .is-disabled {
//     .ui-chkbox-box:not(.ui-state-active) {
//         @extend %is-disabled;
//         background-color: var(--disabled-color);
//     }
// }
